
@startuml C4_Elements_2
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!include puml-resources/common.puml
!define DEVICONS puml-resources/devicons
!define FONTAWESOME puml-resources/font-awesome-5

!include DEVICONS/angular.puml
!include DEVICONS/krakenjs.puml
!include FONTAWESOME/users.puml
LAYOUT_TOP_DOWN()


Boundary(az, "API"){   
    Container(api, "Web API", "API")    
    Container(spa, "SPA", "Main API UI", "Modular, autorizable, integrada, escalable.", $sprite="angular")
    Rel(api, spa, "HTTP/REST")
}

Boundary(fr, "Freiremar"){   
    Person(admin, "Administrador", "Gestiona y monitoriza el rendimiento de la marea.")
    Rel(admin, spa, "")
}

Boundary(Buque, "Buque"){
    Container(buqueApi, "Buque Api", "API")
    Container(buqueApp, "Buque App", "Desktop Online/Offline App", "Crea lances y los envia a la central diariamente automaticamente. Maestros sincronizados desde la API mediante polling.", $sprite="krakenjs")
    Person(captains, "Patrones", "", $sprite="users")
    ContainerDb(sqlLite, "Database", "", "sqlLite")

    Rel(captains, buqueApp, "")
    Container(buqueMob, "Buque Mobile App", "Conectada via WiFi al API", "Para la sala de clasificaciones, gestion del almacen (congeladores) dentro del buque.")
    Rel(buqueApp, buqueApi, "JWT")
    Rel(buqueMob, buqueApi, "HTTP")

    Rel(buqueApi, api, "JWT")
    Rel(buqueApi, sqlLite, "Read/Write")
}
footer Aplicacion standalone de cada buque integracion
@enduml